return {}
-- return {
--   "yetone/avante.nvim",
--   event = "VeryLazy",
--   version = false, -- Never set this value to "*"! Never!
--   opts = {
--     -- add any opts here
--     -- for example
--     provider = "openai",
--     providers = {
--       openai = {
--         api_key = os.getenv("OPENAI_API_KEY"),
--         endpoint = "https://api.openai.com/v1",
--         model = "gpt-4o", -- your desired model (or use gpt-4o, etc.)
--         timeout = 30000, -- Timeout in milliseconds, increase this for reasoning models
--         extra_request_body = {
--           temperature = 0.7,
--           max_completion_tokens = 8192, -- Increase this to include reasoning tokens (for reasoning models)
--         },
--       },
--     },
--   },
--   -- if you want to build from source then do `make BUILD_FROM_SOURCE=true`
--   build = "make",
--   -- build = "powershell -ExecutionPolicy Bypass -File Build.ps1 -BuildFromSource false" -- for windows
--   dependencies = {
--     "nvim-treesitter/nvim-treesitter",
--     "stevearc/dressing.nvim",
--     "nvim-lua/plenary.nvim",
--     "MunifTanjim/nui.nvim",
--     --- The below dependencies are optional,
--     "nvim-mini/mini.pick",
--     "nvim-telescope/telescope.nvim", -- for file_selector provider telescope
--     "hrsh7th/nvim-cmp", -- autocompletion for avante commands and mentions
--     "ibhagwan/fzf-lua", -- for file_selector provider fzf
--     "nvim-tree/nvim-web-devicons", -- or echasnovski/mini.icons
--     "zbirenbaum/copilot.lua", -- for providers='copilot'
--     {
--       -- support for image pasting
--       "HakonHarnes/img-clip.nvim",
--       event = "VeryLazy",
--       opts = {
--         -- recommended settings
--         default = {
--           embed_image_as_base64 = false,
--           prompt_for_file_name = false,
--           drag_and_drop = {
--             insert_mode = true,
--           },
--           -- required for Windows users
--           use_absolute_path = true,
--         },
--       },
--     },
--     {
--       -- Make sure to set this up properly if you have lazy=true
--       "MeanderingProgrammer/render-markdown.nvim",
--       opts = {
--         file_types = { "markdown", "Avante" },
--       },
--       ft = { "markdown", "Avante" },
--     },
--   },
-- }
--
-- --   {
-- --   "jackMort/ChatGPT.nvim",
-- --   event = "VeryLazy",
-- --   config = function()
-- --     local openai_key = os.getenv("OPENAI_API_KEY")
-- --     if not openai_key then
-- --       vim.notify("OPENAI_API_KEY not set! ChatGPT.nvim won't be initialized.", vim.log.levels.WARN)
-- --       return
-- --     end
-- --
-- --     require("chatgpt").setup({
-- --       api_key_cmd = "echo " .. openai_key,
-- --     })
-- --   end,
-- --   dependencies = {
-- --     "MunifTanjim/nui.nvim",
-- --     "nvim-lua/plenary.nvim",
-- --     "nvim-telescope/telescope.nvim",
-- --   },
-- -- }
